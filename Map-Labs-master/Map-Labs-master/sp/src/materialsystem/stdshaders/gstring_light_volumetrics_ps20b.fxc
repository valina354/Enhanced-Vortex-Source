
// STATIC: "FLASHLIGHTDEPTHFILTERMODE"	"0..2"

#include "shader_constant_register_map.h"
#include "common_flashlight_fxc.h"

//const float4x4 g_FlashlightWorldToTexture		: register( c24 ); // through c27
const float4 g_FlashlightColor			: register( c0 );
const float4 g_DepthBlendConstants : register(c1);
const float4 g_FlashlightAttenuation : register(PSREG_FLASHLIGHT_ATTENUATION);


sampler SpotlightTextureSampler		: register( s0 );
sampler DepthSampler				: register( s1 );
sampler FramebufferSampler			: register( s2 );

float DoSimpleFlashlightShadow( sampler depthSampler, float3 flashlightSpacePosition )
{
#if ( FLASHLIGHTDEPTHFILTERMODE == NVIDIA_PCF_POISSON )
	{
		return tex2Dproj( depthSampler, float4( flashlightSpacePosition, 1 ) ).x;
	}
#elif ( FLASHLIGHTDEPTHFILTERMODE == ATI_NO_PCF_FETCH4 )
	{
		float4 vLightDepths = tex2D( depthSampler, flashlightSpacePosition.xy );
		vLightDepths = (vLightDepths > flashlightSpacePosition.zzzz);
		return dot( vLightDepths, float4( 0.25, 0.25, 0.25, 0.25 ) );
	}
#else	// FLASHLIGHTDEPTHFILTERMODE == ATI_NOPCF
	{
		return tex2D( depthSampler, flashlightSpacePosition.xy ).x > flashlightSpacePosition.z;
	}
#endif
}

struct PS_INPUT
{
    float3 flashlightDelta : TEXCOORD0;
	float4 flashlightSpacePos		: TEXCOORD1;
	float4 vProjPos					: TEXCOORD2;
    float4 color : COLOR;
};

float4 main( PS_INPUT i ) : COLOR
{
	float3 UVZ = i.flashlightSpacePos.xyz / i.flashlightSpacePos.w;
	float3 color = tex2D( SpotlightTextureSampler, UVZ.xy ).rgb;
	
	float shadow = DoSimpleFlashlightShadow( DepthSampler, UVZ );
	float depthBlend = smoothstep( 7.0, 15, i.vProjPos.z );
	
	// Compute per-pixel distance attenuation
    float distSquared = dot(i.flashlightDelta, i.flashlightDelta);
    float dist = sqrt(distSquared);
    float farZ = g_FlashlightAttenuation.w;
    float endFalloffFactor = RemapValClamped(dist, farZ, 0.6f * farZ, 0.0f, 1.0f);
    float flAtten = saturate(endFalloffFactor * dot(g_FlashlightAttenuation.xyz, float3(1.0f, 1.0f / dist, 1.0f / distSquared)));
	
	float2 screenUVs = i.vProjPos.xy / i.vProjPos.w * float2(0.5f, -0.5f) + 0.5f;
	depthBlend *= DepthFeathering( FramebufferSampler, screenUVs, i.vProjPos.z, i.vProjPos.w, g_DepthBlendConstants );
	
	color *= g_FlashlightColor.rgb;
	
    return float4(color * i.color.rgb, shadow * flAtten * depthBlend * g_FlashlightColor.a * i.color.a);
}

